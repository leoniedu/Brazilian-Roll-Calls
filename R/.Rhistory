m1@data
tmp
merge.sp(m1,tmp,by="uf")
names(m1@data)
names(tmp)
merge.sp(m1,tmp,by="UF")
plot(merge.sp(m1,tmp,by="UF"))
m2
head(tmp)
?par
?rainbow
rainbow(3)
plot(rep(3), col=rainbow(3),size=3,pch=1)
plot(rep(3), col=rainbow(3),size=3,pch=19)
plot(rep(3), col=rainbow(3),size=3,pch=19)
plot(rep(3), rep(3),col=rainbow(3),size=3,pch=19)
plot(rep(3), rep(3))
plot(rep(3), rep(3),col=rainbow(3),cex=3,pch=19)
plot(rep(3), rep(3),col=rainbow(3),cex=3,pch=19)
plot(1:3, 1:3,col=rainbow(3),cex=3,pch=19)
plot(1:3, 1:3,col=rainbow(3,start=0,end=(3-1)/6),cex=3,pch=19)
plot(1:3, 1:3,col=rainbow(3,start=0,end=(3-1)/6),cex=3,pch=19)
?scale_gradient
scale_gradient
scale_colour_gradient
library(colorRamps)
install.packages("colorRamps")
install.packages("colorRamps")
library(Brewer)
library(ColorBrewer)
library()
library(RColorBrewer)
help(package=RColorBrewer)
?brewer.pal
display.brewer.all()
c(brewer.pal(3,"Reds")
)
c(brewer.pal(3,"Reds"))
c(brewer.pal(3,"Reds"),c(brewer.pal(3,"Blues")))
c(rev(brewer.pal(3,"Blues"),brewer.pal(3,"Reds")))
c(rev(brewer.pal(3,"Blues")),brewer.pal(3,"Reds")))
c(rev(brewer.pal(3,"Blues")),brewer.pal(3,"Reds"))
c(rev(brewer.pal(3,"Blues")),brewer.pal(3,"Reds"))
plot(1:6, 1:6,col=c(rev(brewer.pal(3,"Blues")),brewer.pal(3,"Reds")),cex=3,pch=19)
plot(1:14, 1:14,col=c(rev(brewer.pal(7,"Blues")),brewer.pal(7,"Reds")),cex=3,pch=19)
plot(1:14, 1:14,col=c(rev(brewer.pal(7,"Blues")),"white",brewer.pal(7,"Reds")),cex=3,pch=19)
col.vec
plot(1:14, 1:14,col=c(rev(brewer.pal(7,"Blues")),"white",brewer.pal(7,"Reds")),cex=3,pch=19)
seq(0,1,7)
seq(0,1,length=7)
seq(0,1,length=5)
seq(0,1,length=6)
length(col.vec)
plot(1:5, 1:5,col=colvec)
plot(1:5, 1:5,col=col.vec)
plot(1:5, 1:5,col=col.vec,pch=19, cex=5)
seq(0,1,length=6)
seq(0,1,length=7)
seq(0,1,length=8)
seq(0,1,length=9)
seq(0,1,length=9)
seq(0,1,length=8)
seq(0,1,length=7)
seq(0,1,length=6)
seq(0,1,length=8)
seq(0,1,length=11)
seq(0,1,length=12)
seq(0,1,length=10)
seq(0,1,length=9)
seq(0,1,length=8)
round(seq(0,1,length=8),2)
round(seq(0,1,length=7),2)
round(seq(0,1,length=6),2)
col.vec
seq(0,1,length=8)
seq(0,1,length=length(col.vec))
seq(0,1,length=length(col.vec))
seq(0,1,length=length(col.vec))
seq(0,1,length=length(col.vec))
c(0,.15,.3,.45,.55,.60,.75,.9,1)
c(0,.15,.3,.45,.60,.75,.9,1)
length(c(0,.15,.3,.45,.60,.75,.9,1))
length(c(0,.2,.4,.60,.8,1))
seq(0,1,length=5)
seq(0,1,length=6)
display.brewer.all()
c(0,.15,.3,.45,.55,.70,.85,1)
col.vec
length(col.vec)
with(m2@data,plot(x,y))
with(m2@data,text(x,y,))
head(m2@data)
with(m2@data,text(x,y,UF))
nvotnow
?plot
plot.spec
plot.Map
?plot.Map
     x <- read.shape(system.file("shapes/sids.shp", package="maptools")[1])
     plot(x)

plot(x)
plot(x,main="A")
text(0,0,"AA")
mtext(0,0,"AA")
?mtext
mtext("AA",3)
mtext("AAA",3)
head(data.votacoes)
head(subset(data.votacoes,nvot=nvotnow)
)
head(subset(data.votacoes,nvot=nvotnow))
head(subset(data.votacoes,numvot=nvotnow))
head(subset(data.votacoes,numvot=nvotnow))
nvotnow
head(subset(data.votacoes,numvot==nvotnow))
subset(data.votacoes,numvot==nvotnow)
subset(data.votacoes,numvot==nvotnow)$texordia
capwords(subset(data.votacoes,numvot==nvotnow)$texordia)
capwords(paste(subset(data.votacoes,numvot==nvotnow)$texordia))
head(subset(data.votacoes,numvot==nvotnow))
data.votacao
data.votacao
data.
data.votacoes
subset(data.votacoes,numvot=="0099")
subset(data.votos,numvot=="0099")
with(subset(data.votos,numvot=="0099"),table(partido,voto))
i
Sweave("report.Rnw",driver=RweaveHTML())
data.votacoes
with(data.votacoes, paste('<a href="../images/',datavot,'.',numvot,'.png','"> link </a>',sep='')
)
with(data.votacoes, paste('<a href="../images/',datavot,'.',numvot,'.png','"> link </a>',sep=''))
data.votacoes$mapa <- with(data.votacoes, paste('<a href="../images/',datavot,'.',numvot,'.png','"> mapa </a>',sep=''))

data.votacoes[1:2,]
Sweave("report.Rnw",driver=RweaveHTML())
Sweave("report.Rnw",driver=RweaveHTML())
Sweave("report.Rnw",driver=RweaveHTML())
Sweave("report.Rnw",driver=RweaveHTML())
Sweave("report.Rnw",driver=RweaveHTML())
Sweave("report.Rnw",driver=RweaveHTML())
plot.heat
Sweave("report.Rnw",driver=RweaveHTML())
s
Sweave("report.Rnw",driver=RweaveHTML())
data.votacoes$mapa <- with(data.votacoes, paste('<img src="../images/',datavot,'.',numvot,'small.png','" height=35 width=35 />',sep=''))
##data.votacoes$mapa <- with(data.votacoes, paste('<a href="../images/',datavot,'.',numvot,'.png','"> mapa </a>',sep=''))
data.votacoes

Sweave("report.Rnw",driver=RweaveHTML())
Sweave("report.Rnw",driver=RweaveHTML())
Sweave("report.Rnw",driver=RweaveHTML())
?par
q()
